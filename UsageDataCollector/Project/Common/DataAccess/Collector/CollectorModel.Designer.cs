//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace ICSharpCode.UDC.DataAccess.Collector
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class UsageDatabase : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new UsageDatabase object using the connection string found in the 'UsageDatabase' section of the application configuration file.
        /// </summary>
        public UsageDatabase() : base("name=UsageDatabase", "UsageDatabase")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new UsageDatabase object.
        /// </summary>
        public UsageDatabase(string connectionString) : base(connectionString, "UsageDatabase")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new UsageDatabase object.
        /// </summary>
        public UsageDatabase(EntityConnection connection) : base(connection, "UsageDatabase")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActivationMethod> ActivationMethods
        {
            get
            {
                if ((_ActivationMethods == null))
                {
                    _ActivationMethods = base.CreateObjectSet<ActivationMethod>("ActivationMethods");
                }
                return _ActivationMethods;
            }
        }
        private ObjectSet<ActivationMethod> _ActivationMethods;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EnvironmentData> EnvironmentDatas
        {
            get
            {
                if ((_EnvironmentDatas == null))
                {
                    _EnvironmentDatas = base.CreateObjectSet<EnvironmentData>("EnvironmentDatas");
                }
                return _EnvironmentDatas;
            }
        }
        private ObjectSet<EnvironmentData> _EnvironmentDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EnvironmentDataName> EnvironmentDataNames
        {
            get
            {
                if ((_EnvironmentDataNames == null))
                {
                    _EnvironmentDataNames = base.CreateObjectSet<EnvironmentDataName>("EnvironmentDataNames");
                }
                return _EnvironmentDataNames;
            }
        }
        private ObjectSet<EnvironmentDataName> _EnvironmentDataNames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Exception> Exceptions
        {
            get
            {
                if ((_Exceptions == null))
                {
                    _Exceptions = base.CreateObjectSet<Exception>("Exceptions");
                }
                return _Exceptions;
            }
        }
        private ObjectSet<Exception> _Exceptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExceptionType> ExceptionTypes
        {
            get
            {
                if ((_ExceptionTypes == null))
                {
                    _ExceptionTypes = base.CreateObjectSet<ExceptionType>("ExceptionTypes");
                }
                return _ExceptionTypes;
            }
        }
        private ObjectSet<ExceptionType> _ExceptionTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Feature> Features
        {
            get
            {
                if ((_Features == null))
                {
                    _Features = base.CreateObjectSet<Feature>("Features");
                }
                return _Features;
            }
        }
        private ObjectSet<Feature> _Features;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeatureUse> FeatureUses
        {
            get
            {
                if ((_FeatureUses == null))
                {
                    _FeatureUses = base.CreateObjectSet<FeatureUse>("FeatureUses");
                }
                return _FeatureUses;
            }
        }
        private ObjectSet<FeatureUse> _FeatureUses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Session> Sessions
        {
            get
            {
                if ((_Sessions == null))
                {
                    _Sessions = base.CreateObjectSet<Session>("Sessions");
                }
                return _Sessions;
            }
        }
        private ObjectSet<Session> _Sessions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActivationMethods EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActivationMethods(ActivationMethod activationMethod)
        {
            base.AddObject("ActivationMethods", activationMethod);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EnvironmentDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEnvironmentDatas(EnvironmentData environmentData)
        {
            base.AddObject("EnvironmentDatas", environmentData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EnvironmentDataNames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEnvironmentDataNames(EnvironmentDataName environmentDataName)
        {
            base.AddObject("EnvironmentDataNames", environmentDataName);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Exceptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExceptions(Exception exception)
        {
            base.AddObject("Exceptions", exception);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExceptionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExceptionTypes(ExceptionType exceptionType)
        {
            base.AddObject("ExceptionTypes", exceptionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Features EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeatures(Feature feature)
        {
            base.AddObject("Features", feature);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeatureUses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeatureUses(FeatureUse featureUse)
        {
            base.AddObject("FeatureUses", featureUse);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sessions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSessions(Session session)
        {
            base.AddObject("Sessions", session);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CollectorModel", Name="ActivationMethod")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActivationMethod : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActivationMethod object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ActivationMethod CreateActivationMethod(global::System.Int32 id, global::System.String name)
        {
            ActivationMethod activationMethod = new ActivationMethod();
            activationMethod.Id = id;
            activationMethod.Name = name;
            return activationMethod;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CollectorModel", Name="EnvironmentData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EnvironmentData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EnvironmentData object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="sessionId">Initial value of the SessionId property.</param>
        /// <param name="environmentDataNameId">Initial value of the EnvironmentDataNameId property.</param>
        /// <param name="environmentDataValue">Initial value of the EnvironmentDataValue property.</param>
        public static EnvironmentData CreateEnvironmentData(global::System.Int32 id, global::System.Int32 sessionId, global::System.Int32 environmentDataNameId, global::System.String environmentDataValue)
        {
            EnvironmentData environmentData = new EnvironmentData();
            environmentData.Id = id;
            environmentData.SessionId = sessionId;
            environmentData.EnvironmentDataNameId = environmentDataNameId;
            environmentData.EnvironmentDataValue = environmentDataValue;
            return environmentData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SessionId
        {
            get
            {
                return _SessionId;
            }
            set
            {
                OnSessionIdChanging(value);
                ReportPropertyChanging("SessionId");
                _SessionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SessionId");
                OnSessionIdChanged();
            }
        }
        private global::System.Int32 _SessionId;
        partial void OnSessionIdChanging(global::System.Int32 value);
        partial void OnSessionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EnvironmentDataNameId
        {
            get
            {
                return _EnvironmentDataNameId;
            }
            set
            {
                OnEnvironmentDataNameIdChanging(value);
                ReportPropertyChanging("EnvironmentDataNameId");
                _EnvironmentDataNameId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnvironmentDataNameId");
                OnEnvironmentDataNameIdChanged();
            }
        }
        private global::System.Int32 _EnvironmentDataNameId;
        partial void OnEnvironmentDataNameIdChanging(global::System.Int32 value);
        partial void OnEnvironmentDataNameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EnvironmentDataValue
        {
            get
            {
                return _EnvironmentDataValue;
            }
            set
            {
                OnEnvironmentDataValueChanging(value);
                ReportPropertyChanging("EnvironmentDataValue");
                _EnvironmentDataValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EnvironmentDataValue");
                OnEnvironmentDataValueChanged();
            }
        }
        private global::System.String _EnvironmentDataValue;
        partial void OnEnvironmentDataValueChanging(global::System.String value);
        partial void OnEnvironmentDataValueChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CollectorModel", Name="EnvironmentDataName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EnvironmentDataName : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EnvironmentDataName object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static EnvironmentDataName CreateEnvironmentDataName(global::System.Int32 id, global::System.String name)
        {
            EnvironmentDataName environmentDataName = new EnvironmentDataName();
            environmentDataName.Id = id;
            environmentDataName.Name = name;
            return environmentDataName;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CollectorModel", Name="Exception")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Exception : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Exception object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="sessionId">Initial value of the SessionId property.</param>
        /// <param name="exceptionTypeId">Initial value of the ExceptionTypeId property.</param>
        /// <param name="exceptionTime">Initial value of the ExceptionTime property.</param>
        /// <param name="exceptionStacktrace">Initial value of the ExceptionStacktrace property.</param>
        public static Exception CreateException(global::System.Int32 id, global::System.Int32 sessionId, global::System.Int32 exceptionTypeId, global::System.DateTime exceptionTime, global::System.String exceptionStacktrace)
        {
            Exception exception = new Exception();
            exception.Id = id;
            exception.SessionId = sessionId;
            exception.ExceptionTypeId = exceptionTypeId;
            exception.ExceptionTime = exceptionTime;
            exception.ExceptionStacktrace = exceptionStacktrace;
            return exception;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SessionId
        {
            get
            {
                return _SessionId;
            }
            set
            {
                OnSessionIdChanging(value);
                ReportPropertyChanging("SessionId");
                _SessionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SessionId");
                OnSessionIdChanged();
            }
        }
        private global::System.Int32 _SessionId;
        partial void OnSessionIdChanging(global::System.Int32 value);
        partial void OnSessionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExceptionTypeId
        {
            get
            {
                return _ExceptionTypeId;
            }
            set
            {
                OnExceptionTypeIdChanging(value);
                ReportPropertyChanging("ExceptionTypeId");
                _ExceptionTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExceptionTypeId");
                OnExceptionTypeIdChanged();
            }
        }
        private global::System.Int32 _ExceptionTypeId;
        partial void OnExceptionTypeIdChanging(global::System.Int32 value);
        partial void OnExceptionTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExceptionTime
        {
            get
            {
                return _ExceptionTime;
            }
            set
            {
                OnExceptionTimeChanging(value);
                ReportPropertyChanging("ExceptionTime");
                _ExceptionTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExceptionTime");
                OnExceptionTimeChanged();
            }
        }
        private global::System.DateTime _ExceptionTime;
        partial void OnExceptionTimeChanging(global::System.DateTime value);
        partial void OnExceptionTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExceptionStacktrace
        {
            get
            {
                return _ExceptionStacktrace;
            }
            set
            {
                OnExceptionStacktraceChanging(value);
                ReportPropertyChanging("ExceptionStacktrace");
                _ExceptionStacktrace = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ExceptionStacktrace");
                OnExceptionStacktraceChanged();
            }
        }
        private global::System.String _ExceptionStacktrace;
        partial void OnExceptionStacktraceChanging(global::System.String value);
        partial void OnExceptionStacktraceChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CollectorModel", Name="ExceptionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExceptionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExceptionType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ExceptionType CreateExceptionType(global::System.Int32 id, global::System.String name)
        {
            ExceptionType exceptionType = new ExceptionType();
            exceptionType.Id = id;
            exceptionType.Name = name;
            return exceptionType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CollectorModel", Name="Feature")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Feature : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Feature object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Feature CreateFeature(global::System.Int32 id, global::System.String name)
        {
            Feature feature = new Feature();
            feature.Id = id;
            feature.Name = name;
            return feature;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CollectorModel", Name="FeatureUse")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeatureUse : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeatureUse object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="sessionId">Initial value of the SessionId property.</param>
        /// <param name="useTime">Initial value of the UseTime property.</param>
        /// <param name="featureId">Initial value of the FeatureId property.</param>
        /// <param name="activationMethodId">Initial value of the ActivationMethodId property.</param>
        public static FeatureUse CreateFeatureUse(global::System.Int32 id, global::System.Int32 sessionId, global::System.DateTime useTime, global::System.Int32 featureId, global::System.Int32 activationMethodId)
        {
            FeatureUse featureUse = new FeatureUse();
            featureUse.Id = id;
            featureUse.SessionId = sessionId;
            featureUse.UseTime = useTime;
            featureUse.FeatureId = featureId;
            featureUse.ActivationMethodId = activationMethodId;
            return featureUse;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SessionId
        {
            get
            {
                return _SessionId;
            }
            set
            {
                OnSessionIdChanging(value);
                ReportPropertyChanging("SessionId");
                _SessionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SessionId");
                OnSessionIdChanged();
            }
        }
        private global::System.Int32 _SessionId;
        partial void OnSessionIdChanging(global::System.Int32 value);
        partial void OnSessionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UseTime
        {
            get
            {
                return _UseTime;
            }
            set
            {
                OnUseTimeChanging(value);
                ReportPropertyChanging("UseTime");
                _UseTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UseTime");
                OnUseTimeChanged();
            }
        }
        private global::System.DateTime _UseTime;
        partial void OnUseTimeChanging(global::System.DateTime value);
        partial void OnUseTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FeatureId
        {
            get
            {
                return _FeatureId;
            }
            set
            {
                OnFeatureIdChanging(value);
                ReportPropertyChanging("FeatureId");
                _FeatureId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeatureId");
                OnFeatureIdChanged();
            }
        }
        private global::System.Int32 _FeatureId;
        partial void OnFeatureIdChanging(global::System.Int32 value);
        partial void OnFeatureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActivationMethodId
        {
            get
            {
                return _ActivationMethodId;
            }
            set
            {
                OnActivationMethodIdChanging(value);
                ReportPropertyChanging("ActivationMethodId");
                _ActivationMethodId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivationMethodId");
                OnActivationMethodIdChanged();
            }
        }
        private global::System.Int32 _ActivationMethodId;
        partial void OnActivationMethodIdChanging(global::System.Int32 value);
        partial void OnActivationMethodIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CollectorModel", Name="Session")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Session : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Session object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="clientSessionId">Initial value of the ClientSessionId property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static Session CreateSession(global::System.Int32 id, global::System.Int32 clientSessionId, global::System.DateTime startTime, global::System.Int32 userId)
        {
            Session session = new Session();
            session.Id = id;
            session.ClientSessionId = clientSessionId;
            session.StartTime = startTime;
            session.UserId = userId;
            return session;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientSessionId
        {
            get
            {
                return _ClientSessionId;
            }
            set
            {
                OnClientSessionIdChanging(value);
                ReportPropertyChanging("ClientSessionId");
                _ClientSessionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientSessionId");
                OnClientSessionIdChanged();
            }
        }
        private global::System.Int32 _ClientSessionId;
        partial void OnClientSessionIdChanging(global::System.Int32 value);
        partial void OnClientSessionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CollectorModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="associatedGuid">Initial value of the AssociatedGuid property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String associatedGuid)
        {
            User user = new User();
            user.Id = id;
            user.AssociatedGuid = associatedGuid;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AssociatedGuid
        {
            get
            {
                return _AssociatedGuid;
            }
            set
            {
                OnAssociatedGuidChanging(value);
                ReportPropertyChanging("AssociatedGuid");
                _AssociatedGuid = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AssociatedGuid");
                OnAssociatedGuidChanged();
            }
        }
        private global::System.String _AssociatedGuid;
        partial void OnAssociatedGuidChanging(global::System.String value);
        partial void OnAssociatedGuidChanged();

        #endregion
    
    }

    #endregion
    
}
